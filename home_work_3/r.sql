-- MySQL Script generated by MySQL Workbench
-- Wed Sep 21 10:08:22 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `Log_id` INT NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `Pas_hesh` INT NOT NULL,
  PRIMARY KEY (`Log_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Photo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Photo` (
  `Photo_id` INT NOT NULL,
  `Photo_url` VARCHAR(50) NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`Photo_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Online`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Online` (
  `Online_id` INT NOT NULL,
  `time_con` TIME NOT NULL,
  `Country` VARCHAR(45) NOT NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`Online_id`, `User_id`),
  INDEX `fk_Online_User1_idx` (`User_id` ASC) VISIBLE,
  CONSTRAINT `fk_Online_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Music`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Music` (
  `Music_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `impl` VARCHAR(45) NOT NULL,
  `comp` VARCHAR(45) NOT NULL,
  `num_of_list` VARCHAR(45) NOT NULL,
  `date` DATE NOT NULL,
  `Music_url` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Music_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Message` (
  `Message_id` INT NOT NULL,
  `Text` VARCHAR(45) NOT NULL,
  `User_id` INT NOT NULL,
  `recipient_user_id` INT NOT NULL,
  PRIMARY KEY (`Message_id`),
  INDEX `fk_Message_User_idx` (`User_id` ASC) VISIBLE,
  INDEX `fk_Message_Profile_idx` (`recipient_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_Message_User`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Message_Profile`
    FOREIGN KEY (`recipient_user_id`)
    REFERENCES `mydb`.`Profile` (`recipient_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Profile` (
  `User_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Last_name` VARCHAR(45) NOT NULL,
  `Money` INT NOT NULL,
  `Log_id` INT NOT NULL,
  `Photo_id` INT NOT NULL,
  `Online_id` INT NOT NULL,
  `Music_id` INT NOT NULL,
  `Message_id` INT NOT NULL,
  `recipient_user` INT NOT NULL,
  PRIMARY KEY (`User_id`, `Log_id`, `Photo_id`, `Message_id`, `recipient_user`),
  INDEX `fk_User_Log_in_idx` (`Log_id` ASC) VISIBLE,
  INDEX `fk_User_Photo1_idx` (`Photo_id` ASC) VISIBLE,
  INDEX `fk_User_Online_idx` (`Online_id` ASC) VISIBLE,
  INDEX `fk_User_Music1_idx` (`Music_id` ASC) VISIBLE,
  INDEX `fk_User_Message1_idx` (`Message_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_Log_in`
    FOREIGN KEY (`Log_id`)
    REFERENCES `mydb`.`User` (`Log_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Photo1`
    FOREIGN KEY (`Photo_id`)
    REFERENCES `mydb`.`Photo` (`Photo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Online`
    FOREIGN KEY (`Online_id`)
    REFERENCES `mydb`.`Online` (`Online_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Music1`
    FOREIGN KEY (`Music_id`)
    REFERENCES `mydb`.`Music` (`Music_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Message1`
    FOREIGN KEY (`Message_id`)
    REFERENCES `mydb`.`Message` (`Message_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Video` (
  `Video_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Date` DATETIME NOT NULL,
  `text` VARCHAR(45) NOT NULL,
  `Video_url` VARCHAR(50) NOT NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`Video_id`, `User_id`),
  INDEX `fk_Video_User1_idx` (`User_id` ASC) VISIBLE,
  CONSTRAINT `fk_Video_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Group` (
  `Group_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Subs_id` INT NOT NULL,
  `Photo_id` INT NOT NULL,
  `Video_id` INT NOT NULL,
  PRIMARY KEY (`Group_id`, `Photo_id`, `Video_id`),
  INDEX `fk_Group_Photo1_idx` (`Photo_id` ASC) VISIBLE,
  INDEX `fk_Group_Video1_idx` (`Video_id` ASC) VISIBLE,
  CONSTRAINT `fk_Group_Photo1`
    FOREIGN KEY (`Photo_id`)
    REFERENCES `mydb`.`Photo` (`Photo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Group_Video1`
    FOREIGN KEY (`Video_id`)
    REFERENCES `mydb`.`Video` (`Video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Subs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Subs` (
  `Subs_id` INT NOT NULL,
  `User_User_id` INT NOT NULL,
  `Group_Group_id` INT NOT NULL,
  PRIMARY KEY (`Subs_id`, `User_User_id`, `Group_Group_id`),
  INDEX `fk_Subs_User1_idx` (`User_User_id` ASC) VISIBLE,
  INDEX `fk_Subs_Group1_idx` (`Group_Group_id` ASC) VISIBLE,
  CONSTRAINT `fk_Subs_User1`
    FOREIGN KEY (`User_User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Subs_Group1`
    FOREIGN KEY (`Group_Group_id`)
    REFERENCES `mydb`.`Group` (`Group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`post` (
  `Post_id` INT NOT NULL,
  `text` VARCHAR(45) NOT NULL,
  `num_of_likes` INT NOT NULL,
  `User_id` INT NOT NULL,
  `Photo_id` INT NOT NULL,
  `Video_id` INT NOT NULL,
  PRIMARY KEY (`Post_id`, `User_id`, `Photo_id`, `Video_id`),
  INDEX `fk_post_User1_idx` (`User_id` ASC) VISIBLE,
  INDEX `fk_post_Photo1_idx` (`Photo_id` ASC) VISIBLE,
  INDEX `fk_post_Video1_idx` (`Video_id` ASC) VISIBLE,
  CONSTRAINT `fk_post_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_Photo1`
    FOREIGN KEY (`Photo_id`)
    REFERENCES `mydb`.`Photo` (`Photo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_Video1`
    FOREIGN KEY (`Video_id`)
    REFERENCES `mydb`.`Video` (`Video_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
